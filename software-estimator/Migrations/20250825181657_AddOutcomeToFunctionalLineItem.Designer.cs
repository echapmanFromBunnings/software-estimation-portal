// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using software_estimator.Data;

#nullable disable

namespace software_estimator.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250825181657_AddOutcomeToFunctionalLineItem")]
    partial class AddOutcomeToFunctionalLineItem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("software_estimator.Models.Estimate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Client")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ClonedFromEstimateId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ContingencyPercent")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("SprintLengthDays")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeamId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Estimates");
                });

            modelBuilder.Entity("software_estimator.Models.FunctionalLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AverageSprints")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EstimateId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeviationFlagged")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Outcome")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("PatternKey")
                        .HasColumnType("TEXT");

                    b.Property<int>("SourceType")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Sprints")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EstimateId");

                    b.ToTable("FunctionalLineItems");
                });

            modelBuilder.Entity("software_estimator.Models.NonFunctionalItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EstimateId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EstimateId");

                    b.ToTable("NonFunctionalItems");
                });

            modelBuilder.Entity("software_estimator.Models.ResourceAllocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Hours")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("NonFunctionalItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NonFunctionalItemId");

                    b.ToTable("ResourceAllocations");
                });

            modelBuilder.Entity("software_estimator.Models.ResourceRate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DailyRate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EstimateId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EstimateId");

                    b.ToTable("ResourceRates");
                });

            modelBuilder.Entity("software_estimator.Models.RoleMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EstimateId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceRole")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetRole")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EstimateId", "SourceRole")
                        .IsUnique();

                    b.ToTable("RoleMappings");
                });

            modelBuilder.Entity("software_estimator.Models.FunctionalLineItem", b =>
                {
                    b.HasOne("software_estimator.Models.Estimate", "Estimate")
                        .WithMany("FunctionalItems")
                        .HasForeignKey("EstimateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estimate");
                });

            modelBuilder.Entity("software_estimator.Models.NonFunctionalItem", b =>
                {
                    b.HasOne("software_estimator.Models.Estimate", "Estimate")
                        .WithMany("NonFunctionalItems")
                        .HasForeignKey("EstimateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estimate");
                });

            modelBuilder.Entity("software_estimator.Models.ResourceAllocation", b =>
                {
                    b.HasOne("software_estimator.Models.NonFunctionalItem", "NonFunctionalItem")
                        .WithMany("Allocations")
                        .HasForeignKey("NonFunctionalItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NonFunctionalItem");
                });

            modelBuilder.Entity("software_estimator.Models.ResourceRate", b =>
                {
                    b.HasOne("software_estimator.Models.Estimate", "Estimate")
                        .WithMany("ResourceRates")
                        .HasForeignKey("EstimateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estimate");
                });

            modelBuilder.Entity("software_estimator.Models.RoleMapping", b =>
                {
                    b.HasOne("software_estimator.Models.Estimate", "Estimate")
                        .WithMany("RoleMappings")
                        .HasForeignKey("EstimateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estimate");
                });

            modelBuilder.Entity("software_estimator.Models.Estimate", b =>
                {
                    b.Navigation("FunctionalItems");

                    b.Navigation("NonFunctionalItems");

                    b.Navigation("ResourceRates");

                    b.Navigation("RoleMappings");
                });

            modelBuilder.Entity("software_estimator.Models.NonFunctionalItem", b =>
                {
                    b.Navigation("Allocations");
                });
#pragma warning restore 612, 618
        }
    }
}
